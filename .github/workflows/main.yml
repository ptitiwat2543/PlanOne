name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, development]

jobs:
  # ตรวจสอบคุณภาพโค้ดด้วย ESLint และ TypeScript
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

  # สร้างและทดสอบแอปพลิเคชัน
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

  # Deploy to Preview Environment (for pull requests)
  deploy-preview:
    name: Deploy to Preview
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Install dependencies
        run: npm ci

      - name: Run database migrations
        run: npm run db:migrate:preview
        env:
          DATABASE_URL: ${{ secrets.PREVIEW_DATABASE_URL }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Deploy to Preview Environment
        run: |
          vercel deploy --token ${{ secrets.VERCEL_TOKEN }} \
            --env NEXT_PUBLIC_ENV=preview \
            --env NODE_ENV=preview \
            --env NEXT_PUBLIC_SITE_URL=https://planone-preview.vercel.app \
            --env NEXT_PUBLIC_AUTH_REDIRECT_URL=https://planone-preview.vercel.app/auth/token

  # Deploy to Production Environment (only for push to main)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Install dependencies
        run: npm ci

      - name: Run database migrations
        run: npm run db:migrate:production
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Deploy to Production Environment
        run: |
          vercel deploy --token ${{ secrets.VERCEL_TOKEN }} --prod \
            --env NEXT_PUBLIC_ENV=production \
            --env NODE_ENV=production \
            --env NEXT_PUBLIC_SITE_URL=https://planone.vercel.app \
            --env NEXT_PUBLIC_AUTH_REDIRECT_URL=https://planone.vercel.app/auth/token